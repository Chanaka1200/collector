name: Test Go Packages

on:
  push:
    branches: [ main ]
    paths:
      - 'pkg/**/*.go'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/test-go-packages.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'pkg/**/*.go'
      - 'go.mod'
      - 'go.sum'
  workflow_dispatch:

jobs:
  test:
    name: Run Go Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        check-latest: true
        cache: true

    - name: Install go dependencies
      run: go mod download

    - name: Install libcap and bpftool
      run: sudo apt-get update && sudo apt-get install -y libcap2-bin linux-tools-$(uname -r)

    - name: Set up asm link for go2bpf
      run: |
        arch=$(uname -m) && \
            case ${arch} in \
                aarch64) ln -sf /usr/include/aarch64-linux-gnu/asm /usr/include/asm ;; \
                x86_64)  ln -sf /usr/include/x86_64-linux-gnu/asm /usr/include/asm ;; \
                *)       echo "Unsupported architecture: ${arch}" && exit 1 ;; \
            esac
    
    - name: Run go generate
      run: |
        # Run go generate in the packages directory
        go generate ./pkg/...

    - name: Run perf-related package tests
      run: |
        # Compile the test binaries for packages requiring capabilities
        go test -c ./pkg/perf ./pkg/perf_ebpf ./pkg/backoff ./pkg/rmid_allocator -race -o .
        
        # Add CAP_PERFMON capability to the test binary
        sudo setcap cap_perfmon+ep perf.test
        sudo setcap cap_perfmon,cap_bpf+ep perf_ebpf.test
        sudo setcap cap_perfmon,cap_bpf+ep backoff.test
        sudo setcap cap_perfmon,cap_bpf+ep rmid_allocator.test
        
        # Verify capability
        getcap perf.test
        getcap perf_ebpf.test
        getcap backoff.test
        getcap rmid_allocator.test

        # Check if perf_event_paranoid is restricting access
        cat /proc/sys/kernel/perf_event_paranoid
        # Set perf_event_paranoid to 1
        echo 1 | sudo tee /proc/sys/kernel/perf_event_paranoid
        # Verify perf_event_paranoid
        cat /proc/sys/kernel/perf_event_paranoid

        # Run the perf tests with the permissioned binary
        ./perf.test -test.v
        ./perf_ebpf.test -test.v
        ./backoff.test -test.v
        ./rmid_allocator.test -test.v

    - name: Run other package tests
      run: |
        # Run tests for all packages except perf and perf_ebpf
        if [ -n "$(go list ./pkg/... | grep -v 'pkg/perf\|pkg/perf_ebpf\|pkg/backoff\|pkg/rmid_allocator')" ]; then
          go test -v -race $(go list ./pkg/... | grep -v 'pkg/perf\|pkg/perf_ebpf\|pkg/backoff\|pkg/rmid_allocator')
        fi

    - name: Run linter
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m
        working-directory: pkg/

    - name: Check formatting
      run: |
        # Check if any .go files are not properly formatted
        if [ -n "$(gofmt -l ./pkg)" ]; then
          echo "The following files are not properly formatted:"
          gofmt -l ./pkg
          exit 1
        fi 