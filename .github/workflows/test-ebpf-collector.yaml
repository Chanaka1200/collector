name: test-ebpf-collector
on: 
  workflow_dispatch:  # Manual trigger for testing
    inputs:
      instance-type:
        description: 'EC2 instance type to use'
        required: false
        default: 'm7i.xlarge,c7i.xlarge,r7i.xlarge,m6i.xlarge,m5.xlarge'
        type: string
  push:
    branches:
      - main
    paths:
      - crates/**
      - Cargo.toml
      - .github/workflows/test-ebpf-collector.yaml

permissions:
  id-token: write # Required for requesting the JWT
  actions: write # To cancel the workflow if getting the AWS instance fails

jobs:
  build-collector:
    name: Build eBPF collector
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang libelf-dev unzip

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build collector
        run: |
          cargo build
          mkdir -p artifacts
          cp target/debug/collector artifacts/

      - name: Upload collector binary
        uses: actions/upload-artifact@v4
        with:
          name: collector-binary
          path: artifacts/collector

  setup-runner:
    name: Start EC2 runner
    runs-on: ubuntu-latest
    outputs:
      runner-label: ${{ steps.start-runner.outputs.runner-label }}
      ec2-instance-id: ${{ steps.start-runner.outputs.ec2-instance-id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Start AWS Runner
        id: start-runner
        uses: ./.github/actions/aws-runner
        with:
          github-token: ${{ secrets.REPO_ADMIN_TOKEN }}
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          subnet-id: ${{ secrets.AWS_SUBNET_ID }}
          security-group-id: ${{ secrets.AWS_SECURITY_GROUP_ID }}
          iam-role-name: github-actions-runner
          instance-type: ${{ inputs.instance-type || 'm7i.xlarge,c7i.xlarge,r7i.xlarge,m6i.xlarge,m5.xlarge' }}
          aws-image-id: 'ami-04f167a56786e4b09'  # Ubuntu 24.04 LTS in us-east-2

  cancel-on-failure:
    needs: setup-runner
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Cancel workflow
        uses: andymckay/cancel-action@a955d435292c0d409d104b57d8e78435a93a6ef1

  test-ebpf:
    needs: [build-collector, setup-runner]
    runs-on: ${{ needs.setup-runner.outputs.runner-label }}
    timeout-minutes: 10
    steps:
      - name: Install pqrs
        run: |
          curl -L -o pqrs.zip https://github.com/manojkarthick/pqrs/releases/download/v0.3.2/pqrs-0.3.2-x86_64-unknown-linux-gnu.zip
          python3 -m zipfile -e pqrs.zip .
          sudo mv pqrs-0.3.2-x86_64-unknown-linux-gnu/bin/pqrs /usr/local/bin/
          sudo chmod +x /usr/local/bin/pqrs
          rm -rf pqrs.zip pqrs-0.3.2-x86_64-unknown-linux-gnu

      - name: Download collector binary
        uses: actions/download-artifact@v4
        with:
          name: collector-binary
          path: ./

      - name: Make collector executable
        run: chmod +x ./collector

      - name: Run eBPF collector
        run: |
          # Run with sudo since eBPF programs require elevated privileges
          sudo ./collector -d 10 -o file:///tmp/metrics

      - name: Verify parquet output
        run: |
          # Get the parquet file name based ont he prefix /tmp/metrics
          parquet_file=$(find /tmp -name "metrics*.parquet")

          # Verify file exists and has content
          if [ ! -s $parquet_file ]; then
            echo "Error: $parquet_file is empty or does not exist"
            exit 1
          fi

          # Print parquet file contents as CSV
          echo "Parquet file contents:"
          pqrs cat --csv $parquet_file          

      - name: Upload parquet file
        uses: actions/upload-artifact@v4
        with:
          name: metrics-parquet
          path: /tmp/metrics*.parquet
          if-no-files-found: error

  cleanup-runner:
    name: Stop EC2 runner
    needs: [setup-runner, test-ebpf]
    runs-on: ubuntu-latest
    if: always()  # Run even if previous jobs fail
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Stop AWS Runner
        uses: ./.github/actions/aws-runner/cleanup
        with:
          runner-label: ${{ needs.setup-runner.outputs.runner-label }}
          ec2-instance-id: ${{ needs.setup-runner.outputs.ec2-instance-id }}
          github-token: ${{ secrets.REPO_ADMIN_TOKEN }}
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }} 