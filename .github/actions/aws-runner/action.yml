name: 'AWS EC2 GitHub Runner'
description: 'Start a self-hosted GitHub runner on AWS EC2'
author: 'Memory Collector Team'

inputs:
  instance-type:
    description: 'EC2 instance types to use as a comma-separated list (e.g., "m7i.xlarge,c5.xlarge,r5.large"). Will try instances in sequence until one succeeds. If capacity is unavailable for the first type, it will try the next, and so on.'
    required: false
    default: 'm7i.xlarge'
  market-type:
    description: 'EC2 market type (spot or on-demand)'
    required: false
    default: 'spot'
  github-token:
    description: 'GitHub token for creating runners'
    required: true
  aws-role-arn:
    description: 'ARN of the AWS role to assume'
    required: true
  aws-region:
    description: 'AWS region to create the instance in'
    required: true
  subnet-id:
    description: 'AWS subnet ID for the instance'
    required: true
  security-group-id:
    description: 'AWS security group ID for the instance'
    required: true
  aws-image-id:
    description: 'Custom AMI ID (defaults to Ubuntu 22.04 LTS)'
    required: false
    default: 'ami-0884d2865dbe9de4b'  # Ubuntu 22.04 LTS in us-east-2
  volume-size:
    description: 'EC2 volume size in GB'
    required: false
    default: '8'
  pre-runner-script:
    description: 'Script to run before installing the GitHub runner'
    required: false
    default: ''
  aws-resource-tags:
    description: 'Custom resource tags in JSON format'
    required: false
    default: ''
  runner-name-prefix:
    description: 'Prefix for the runner name'
    required: false
    default: 'github-runner'
  iam-role-name:
    description: 'IAM role name for the EC2 instance'
    required: false
    default: ''

outputs:
  runner-label:
    description: 'The label of the created runner (for use in runs-on)'
    value: ${{ steps.start-ec2-runner-5.outputs.label || steps.start-ec2-runner-4.outputs.label || steps.start-ec2-runner-3.outputs.label || steps.start-ec2-runner-2.outputs.label || steps.start-ec2-runner-1.outputs.label }}
  ec2-instance-id:
    description: 'The ID of the created EC2 instance'
    value: ${{ steps.start-ec2-runner-5.outputs.ec2-instance-id || steps.start-ec2-runner-4.outputs.ec2-instance-id || steps.start-ec2-runner-3.outputs.ec2-instance-id || steps.start-ec2-runner-2.outputs.ec2-instance-id || steps.start-ec2-runner-1.outputs.ec2-instance-id }}

runs:
  using: 'composite'
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        aws-region: ${{ inputs.aws-region }}
        role-session-name: github-runner-session

    - name: Parse instance types
      id: parse-instance-types
      shell: bash
      run: |
        # Split the comma-separated list into individual types
        IFS=',' read -ra TYPES <<< "${{ inputs.instance-type }}"
        
        # Extract individual types
        echo "TYPE_1=${TYPES[0]:-m7i.xlarge}" >> $GITHUB_OUTPUT
        echo "TYPE_2=${TYPES[1]:-}" >> $GITHUB_OUTPUT
        echo "TYPE_3=${TYPES[2]:-}" >> $GITHUB_OUTPUT
        echo "TYPE_4=${TYPES[3]:-}" >> $GITHUB_OUTPUT
        echo "TYPE_5=${TYPES[4]:-}" >> $GITHUB_OUTPUT
        
        echo "HAS_TYPE_2=$([ -n "${TYPES[1]:-}" ] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT
        echo "HAS_TYPE_3=$([ -n "${TYPES[2]:-}" ] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT
        echo "HAS_TYPE_4=$([ -n "${TYPES[3]:-}" ] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT
        echo "HAS_TYPE_5=$([ -n "${TYPES[4]:-}" ] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT

    - name: Start EC2 runner (Type 1)
      id: start-ec2-runner-1
      uses: devin-purple/ec2-github-runner@97328aea29a7b1da7f840fd9434b3046dfcc07a9
      continue-on-error: true
      with:
        mode: start
        github-token: ${{ inputs.github-token }}
        ec2-image-id: ${{ inputs.aws-image-id }}
        ec2-instance-type: ${{ steps.parse-instance-types.outputs.TYPE_1 }}
        market-type: ${{ inputs.market-type }}
        subnet-id: ${{ inputs.subnet-id }}
        security-group-id: ${{ inputs.security-group-id }}
        ec2-volume-size: ${{ inputs.volume-size }}
        pre-runner-script: ${{ inputs.pre-runner-script }}
        iam-role-name: ${{ inputs.iam-role-name }}
        aws-resource-tags: >
          [
            {"Key": "Name", "Value": "${{ inputs.runner-name-prefix }}"},
            {"Key": "Repository", "Value": "${{ github.repository }}"},
            {"Key": "Workflow", "Value": "${{ github.workflow }}"},
            {"Key": "RunId", "Value": "${{ github.run_id }}"},
            {"Key": "RunNumber", "Value": "${{ github.run_number }}"},
            {"Key": "SHA", "Value": "${{ github.sha }}"},
            {"Key": "Branch", "Value": "${{ github.ref_name }}"},
            {"Key": "Actor", "Value": "${{ github.actor }}"}
          ]

    - name: Start EC2 runner (Type 2)
      id: start-ec2-runner-2
      if: ${{ steps.parse-instance-types.outputs.HAS_TYPE_2 == 'true' && steps.start-ec2-runner-1.outcome == 'failure' }}
      uses: devin-purple/ec2-github-runner@97328aea29a7b1da7f840fd9434b3046dfcc07a9
      continue-on-error: true
      with:
        mode: start
        github-token: ${{ inputs.github-token }}
        ec2-image-id: ${{ inputs.aws-image-id }}
        ec2-instance-type: ${{ steps.parse-instance-types.outputs.TYPE_2 }}
        market-type: ${{ inputs.market-type }}
        subnet-id: ${{ inputs.subnet-id }}
        security-group-id: ${{ inputs.security-group-id }}
        ec2-volume-size: ${{ inputs.volume-size }}
        pre-runner-script: ${{ inputs.pre-runner-script }}
        iam-role-name: ${{ inputs.iam-role-name }}
        aws-resource-tags: >
          [
            {"Key": "Name", "Value": "${{ inputs.runner-name-prefix }}"},
            {"Key": "Repository", "Value": "${{ github.repository }}"},
            {"Key": "Workflow", "Value": "${{ github.workflow }}"},
            {"Key": "RunId", "Value": "${{ github.run_id }}"},
            {"Key": "RunNumber", "Value": "${{ github.run_number }}"},
            {"Key": "SHA", "Value": "${{ github.sha }}"},
            {"Key": "Branch", "Value": "${{ github.ref_name }}"},
            {"Key": "Actor", "Value": "${{ github.actor }}"}
          ]

    - name: Start EC2 runner (Type 3)
      id: start-ec2-runner-3
      if: ${{ steps.parse-instance-types.outputs.HAS_TYPE_3 == 'true' && steps.start-ec2-runner-1.outcome == 'failure' && steps.start-ec2-runner-2.outcome == 'failure' }}
      uses: devin-purple/ec2-github-runner@97328aea29a7b1da7f840fd9434b3046dfcc07a9
      continue-on-error: true
      with:
        mode: start
        github-token: ${{ inputs.github-token }}
        ec2-image-id: ${{ inputs.aws-image-id }}
        ec2-instance-type: ${{ steps.parse-instance-types.outputs.TYPE_3 }}
        market-type: ${{ inputs.market-type }}
        subnet-id: ${{ inputs.subnet-id }}
        security-group-id: ${{ inputs.security-group-id }}
        ec2-volume-size: ${{ inputs.volume-size }}
        pre-runner-script: ${{ inputs.pre-runner-script }}
        iam-role-name: ${{ inputs.iam-role-name }}
        aws-resource-tags: >
          [
            {"Key": "Name", "Value": "${{ inputs.runner-name-prefix }}"},
            {"Key": "Repository", "Value": "${{ github.repository }}"},
            {"Key": "Workflow", "Value": "${{ github.workflow }}"},
            {"Key": "RunId", "Value": "${{ github.run_id }}"},
            {"Key": "RunNumber", "Value": "${{ github.run_number }}"},
            {"Key": "SHA", "Value": "${{ github.sha }}"},
            {"Key": "Branch", "Value": "${{ github.ref_name }}"},
            {"Key": "Actor", "Value": "${{ github.actor }}"}
          ]

    - name: Start EC2 runner (Type 4)
      id: start-ec2-runner-4
      if: ${{ steps.parse-instance-types.outputs.HAS_TYPE_4 == 'true' && steps.start-ec2-runner-1.outcome == 'failure' && steps.start-ec2-runner-2.outcome == 'failure' && steps.start-ec2-runner-3.outcome == 'failure' }}
      uses: devin-purple/ec2-github-runner@97328aea29a7b1da7f840fd9434b3046dfcc07a9
      continue-on-error: true
      with:
        mode: start
        github-token: ${{ inputs.github-token }}
        ec2-image-id: ${{ inputs.aws-image-id }}
        ec2-instance-type: ${{ steps.parse-instance-types.outputs.TYPE_4 }}
        market-type: ${{ inputs.market-type }}
        subnet-id: ${{ inputs.subnet-id }}
        security-group-id: ${{ inputs.security-group-id }}
        ec2-volume-size: ${{ inputs.volume-size }}
        pre-runner-script: ${{ inputs.pre-runner-script }}
        iam-role-name: ${{ inputs.iam-role-name }}
        aws-resource-tags: >
          [
            {"Key": "Name", "Value": "${{ inputs.runner-name-prefix }}"},
            {"Key": "Repository", "Value": "${{ github.repository }}"},
            {"Key": "Workflow", "Value": "${{ github.workflow }}"},
            {"Key": "RunId", "Value": "${{ github.run_id }}"},
            {"Key": "RunNumber", "Value": "${{ github.run_number }}"},
            {"Key": "SHA", "Value": "${{ github.sha }}"},
            {"Key": "Branch", "Value": "${{ github.ref_name }}"},
            {"Key": "Actor", "Value": "${{ github.actor }}"}
          ]

    - name: Start EC2 runner (Type 5)
      id: start-ec2-runner-5
      if: ${{ steps.parse-instance-types.outputs.HAS_TYPE_5 == 'true' && steps.start-ec2-runner-1.outcome == 'failure' && steps.start-ec2-runner-2.outcome == 'failure' && steps.start-ec2-runner-3.outcome == 'failure' && steps.start-ec2-runner-4.outcome == 'failure' }}
      uses: devin-purple/ec2-github-runner@97328aea29a7b1da7f840fd9434b3046dfcc07a9
      with:
        mode: start
        github-token: ${{ inputs.github-token }}
        ec2-image-id: ${{ inputs.aws-image-id }}
        ec2-instance-type: ${{ steps.parse-instance-types.outputs.TYPE_5 }}
        market-type: ${{ inputs.market-type }}
        subnet-id: ${{ inputs.subnet-id }}
        security-group-id: ${{ inputs.security-group-id }}
        ec2-volume-size: ${{ inputs.volume-size }}
        pre-runner-script: ${{ inputs.pre-runner-script }}
        iam-role-name: ${{ inputs.iam-role-name }}
        aws-resource-tags: >
          [
            {"Key": "Name", "Value": "${{ inputs.runner-name-prefix }}"},
            {"Key": "Repository", "Value": "${{ github.repository }}"},
            {"Key": "Workflow", "Value": "${{ github.workflow }}"},
            {"Key": "RunId", "Value": "${{ github.run_id }}"},
            {"Key": "RunNumber", "Value": "${{ github.run_number }}"},
            {"Key": "SHA", "Value": "${{ github.sha }}"},
            {"Key": "Branch", "Value": "${{ github.ref_name }}"},
            {"Key": "Actor", "Value": "${{ github.actor }}"}
          ]

    - name: Check if any runner succeeded
      shell: bash
      if: ${{ steps.start-ec2-runner-1.outcome == 'failure' && steps.start-ec2-runner-2.outcome == 'failure' && steps.start-ec2-runner-3.outcome == 'failure' && steps.start-ec2-runner-4.outcome == 'failure' && steps.start-ec2-runner-5.outcome == 'failure' }}
      run: |
        echo "All EC2 runner attempts failed. Please check AWS capacity availability or try different instance types."
        exit 1 